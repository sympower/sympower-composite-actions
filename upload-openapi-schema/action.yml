name: 'Upload OpenAPI Schema'
description: 'If there are changes to the openapi schema, upload it to Nexus'
inputs:
  version:
    description: 'Version of the artifact to be published'
    required: true
  gistID:
    description: 'ID of the gist with the version badge to update'
    required: true
  secrets:
    description: 'Secrets required for the build'
    required: true
  openapi-dir:
    description: 'Repo directory Å¥o check for openapi file changes'
    default: 'openapi'
runs:
  using: "composite"
  steps:
    - name: "Check if openapi specs exists"
      shell: bash
      run: |
        if find . -type d -name "${{ inputs.openapi-dir }}" -print -quit; then
          echo "HAS_SCHEMA=true" >> $GITHUB_ENV ;
        else
          echo "HAS_SCHEMA=false" >> $GITHUB_ENV ;
        fi

    - name: "Check for changes in openapi specs"
      if: env.HAS_SCHEMA == 'true'
      id: openapi-files
      uses: tj-actions/changed-files@v45
      with:
        since_last_remote_commit: "true"
        files: '**/${{ inputs.openapi-dir }}/**'

    - name: Upload openapi specs
      shell: bash
      if:
        env.HAS_SCHEMA == 'true'
#      Temporary disable, otherwise we might wait for a long time for the badge to be updated
#      since the openapi specs are not updated very frequently
#        && steps.openapi-files.outputs.any_modified == 'true'
      run: |
        set -eu
        
        ./gradlew publishOpenApiSchemas --parallel --continue --stacktrace \
          -Ptag=${{ inputs.version }}

    - run: echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV
      shell: bash

    - name: Update Schema Version Badge
      if:
        env.HAS_SCHEMA == 'true'
#      Temporary disable, otherwise we might wait for a long time for the badge to be updated
#      since the openapi specs are not updated very frequently
#        && steps.openapi-files.outputs.any_modified == 'true'
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ fromJSON(inputs.secrets).GIST_SECRET }}
        gistID: ${{ inputs.gistID }}
        filename: ${{ env.REPOSITORY_NAME }}-openapi.json
        label: OpenAPI Specs Version
        message: ${{ inputs.version }}
        color: green
